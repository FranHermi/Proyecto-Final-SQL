USE PRODUCTOS;
DROP TRIGGER IF EXISTS TRG_LOG_CPU1;
DELIMITER //
CREATE TRIGGER TRG_LOG_CPU1 AFTER INSERT ON PRODUCTOS.PROCESADORES -- CREO EL TRIGGER QUE AVISARÁ CUANDO SE 'INSERTE' ALGÚN DATO EN PROCESADORES
FOR EACH ROW 
BEGIN

INSERT INTO LOG_AUDITORIA_CPU1 (ACCION , TABLA , USUARIO,FECHA_UPD_INS_DEL, HORA_UPD_INS_DEL)
VALUES ( 'INSERT' , 'PROCESADORES' ,CURRENT_USER() , NOW(), NOW());

END//
DELIMITER ;
-- -------------------------------
DROP TRIGGER IF EXISTS TRG_LOG_CPU2;
DELIMITER //
CREATE TRIGGER  TRG_LOG_CPU2 AFTER INSERT ON PRODUCTOS.PROCESADORES -- CREO EL TRIGGER QUE GUARDARÁ LOS DETALLES DEL PRODUCTO INSERTADO
FOR EACH ROW 
BEGIN
 
INSERT INTO LOG_AUDITORIA_CPU2 (LOG_MODELO , LOG_idcpu, ACCION , TABLA ,USUARIO, FECHA_UPD_INS_DEL, HORA_UPD_INS_DEL)
VALUES ( NEW.MODELO  ,NEW.idcpu, 'INSERT' , 'PROCESADORES' ,CURRENT_USER(), NOW(), NOW());
       
END//
DELIMITER ;
-- ------------------------------
DROP TRIGGER IF EXISTS TRG_LOG_CPU3 ;
DELIMITER //
CREATE TRIGGER TRG_LOG_CPU3 BEFORE UPDATE ON PRODUCTOS.PROCESADORES -- CREO EL TRIGGER QUE GUARDARÁ LOS DATOS CUANDO SE ACTUALICE ALGÚN CAMPO
FOR EACH ROW 
BEGIN

INSERT INTO LOG_AUDITORIA_CPU2 (CAMPO_NUEVO, CAMPO_ANTERIOR, ACCION , TABLA , FECHA_UPD_INS_DEL, HORA_UPD_INS_DEL)
VALUES ( CONCAT('PROCESADOR_NUEVO: ', NEW.MODELO, ' ID_CPU_ACTUAL : ', NEW.idcpu),
		 CONCAT('PROCESADOR_ANTERIOR: ', OLD.MODELO, ' ID_CPU_ANTERIOR : ', OLD.idcpu),
         'UPDATE' , 'PROCESADORES' , NOW(), NOW());
-- GUARDARÁ EL MODELO ANTERIOR, EL NUEVO, EL ID DEL MODELO MODIFICADO, CONFIRMARÁ QUE FUE 'UPDATE', LA TABLA Y LA FECHA EN QUE SE MODIFICÓ
END//
DELIMITER ;
-- SELECT * FROM PROCESADORES;

-- ------------------------------- GRAFICAS ----------------------------------------------

DROP TRIGGER IF EXISTS TRG_LOG_GRAF1;
DELIMITER //
CREATE TRIGGER TRG_LOG_GRAF1 AFTER INSERT ON PRODUCTOS.GRAFICAS -- CREO EL TRIGGER QUE AVISARÁ CUANDO SE 'INSERTE' ALGÚN DATO EN GRAFICAS
FOR EACH ROW 
BEGIN

INSERT INTO LOG_AUDITORIA_GRAF1 (ACCION , TABLA , USUARIO,FECHA_UPD_INS_DEL, HORA_UPD_INS_DEL)
VALUES ( 'INSERT' , 'GRAFICAS' ,CURRENT_USER() , NOW(), NOW());

END//
DELIMITER ;
-- -------------------------------------------------------------------------
DROP TRIGGER IF EXISTS TRG_LOG_GRAF2;
DELIMITER //
CREATE TRIGGER  TRG_LOG_GRAF2 AFTER INSERT ON PRODUCTOS.GRAFICAS -- CREO EL TRIGGER QUE GUARDARÁ LOS DETALLES DEL PRODUCTO INSERTADO
FOR EACH ROW 
BEGIN
 
INSERT INTO LOG_AUDITORIA_GRAF2 (LOG_MODELO , LOG_idgraf, ACCION , TABLA ,USUARIO, FECHA_UPD_INS_DEL, HORA_UPD_INS_DEL)
VALUES ( NEW.MODELO  ,NEW.idgraf, 'INSERT' , 'GRAFICAS' ,CURRENT_USER(), NOW(), NOW());
       
END//
DELIMITER ;
-- ------------------------------
DROP TRIGGER IF EXISTS TRG_LOG_GRAF3 ;
DELIMITER //
CREATE TRIGGER TRG_LOG_GRAF3 BEFORE UPDATE ON PRODUCTOS.GRAFICAS -- CREO EL TRIGGER QUE GUARDARÁ LOS DATOS CUANDO SE ACTUALICE ALGÚN CAMPO
FOR EACH ROW 
BEGIN

INSERT INTO LOG_AUDITORIA_GRAF2 (CAMPO_ANTERIOR, CAMPO_NUEVO, ACCION , TABLA , FECHA_UPD_INS_DEL, HORA_UPD_INS_DEL)
VALUES ( CONCAT('GRAFICA_ANTERIOR: ',OLD.MODELO, ' ID_GRAF_ANTERIOR : ',OLD.idgraf ),
		 CONCAT('GRAFICA_NUEVA: ',NEW.MODELO, ' ID_GRAF_NUEVA : ',NEW.idgraf ),
         'UPDATE' ,
         'GRAFICAS' ,
         NOW(),
         NOW());
-- GUARDARÁ EL MODELO ANTERIOR, EL NUEVO, EL ID DEL MODELO MODIFICADO, CONFIRMARÁ QUE FUE 'UPDATE', LA TABLA Y LA FECHA EN QUE SE MODIFICÓ
END//
DELIMITER ;

-- SELECT * FROM GRAFICAS WHERE idgraf=2;
-- UPDATE GRAFICAS SET graf_idprov=1 WHERE graf_idprov= 2 AND idgraf=2;
